# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: 'Ubuntu-16.04'

steps:
- script: sudo apt-get install azure-functions-core-tools
  displayName: 'Install Azure Core Tools'
- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: false
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'package'
# Copy files    
- task: CopyFiles@2
  displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
  inputs:
    SourceFolder: '$(system.defaultworkingdirectory)'
    Contents: '**/azure-functions/**'
    TargetFolder: '$(build.artifactstagingdirectory)'
# Create Archive : zip file
- task: ArchiveFiles@2
  displayName: 'Archive $(build.artifactstagingdirectory)/target/azure-functions/$(functionAppMvnTargetFolder)'
  inputs:
    rootFolderOrFile: '$(build.artifactstagingdirectory)/target/azure-functions/$(functionAppMvnTargetFolder)'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    replaceExistingArchive: true
# Deploy using Azure App Service Deploy - Webdeployment
- task: AzureRmWebAppDeployment@4
  displayName: 'Azure App Service Deploy: javapipeline'
  inputs:
    azureSubscription: '$(azureSubcriptionKey)'
    appType: functionApp
    WebAppName: yourAppServiceName
    packageForLinux: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    enableCustomDeployment: true
    DeploymentType: runFromZip    
    TakeAppOfflineFlag: false
    ExcludeFilesFromAppDataFlag: false
    RenameFilesFlag: false
- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'